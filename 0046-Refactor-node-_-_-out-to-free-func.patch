From af5b56d9274bc2e48b3aff483c8d55c94e6b4328 Mon Sep 17 00:00:00 2001
From: James <jbean46@gmail.com>
Date: Mon, 5 Nov 2018 21:51:40 -0500
Subject: [PATCH 46/66] Refactor node(_:_:) out to free func

---
 .../PitchSpeller/Wetherfield/Wetherfield.swift     | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift b/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
index 263ddc0..d20304c 100644
--- a/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
+++ b/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
@@ -134,12 +134,7 @@ extension PitchSpeller {
         return contains ? pitchClassAdjacencyScheme : pitchClassNonAdjacencyScheme
     }
 
-    /// - Returns: The value of a node at the given offset (index of a `Pitch` within `pitches`),
-    /// and an index (either `0` or `1`, which of the two nodes in the `FlowNetwork` that represent
-    /// the given `Pitch`.)
-    private static func node(_ offset: Int, _ index: Tendency) -> PitchSpellingNode.Index {
-        return .internal(.init(offset, index))
-    }
+
 
     /// - Returns: An array of nodes, each representing the index of the unassigned node in
     /// `pitchNodes`.
@@ -202,6 +197,13 @@ extension PitchSpeller {
     }
 }
 
+/// - Returns: The value of a node at the given offset (index of a `Pitch` within `pitches`),
+/// and an index (either `0` or `1`, which of the two nodes in the `FlowNetwork` that represent
+/// the given `Pitch`.)
+private func node(_ offset: Int, _ index: Tendency) -> PitchSpellingNode.Index {
+    return .internal(.init(offset, index))
+}
+
 let connectSameTendencies: GraphScheme<PitchSpellingNode.Index> = GraphScheme<Tendency> { edge in edge.a == edge.b
 }.pullback { node in node.tendency }
 
-- 
2.17.2 (Apple Git-113)

