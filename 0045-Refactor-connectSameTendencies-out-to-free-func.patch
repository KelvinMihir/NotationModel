From ecf4cb572deeebe416bd501e521a0b3cd36237ed Mon Sep 17 00:00:00 2001
From: James <jbean46@gmail.com>
Date: Mon, 5 Nov 2018 21:48:55 -0500
Subject: [PATCH 45/66] Refactor connectSameTendencies out to free func

---
 .../PitchSpeller/Wetherfield/Wetherfield.swift        | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift b/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
index 97cc79c..263ddc0 100644
--- a/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
+++ b/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
@@ -107,8 +107,8 @@ extension PitchSpeller {
         let connectToEight: GraphScheme<PitchSpellingNode.Index> = specificToEight.pullback { flowNode in
             .init(getPitchClass(flowNode), flowNode.tendency)
         }
-        let connectedToTwoNotEight = PitchSpeller.connectSameTendencies * whereEdge(contains: false)(8) * whereEdge(contains: true)(2)
-        let sameClass = PitchSpeller.connectSameTendencies * GraphScheme<Pitch.Class> { edge in
+        let connectedToTwoNotEight = connectSameTendencies * whereEdge(contains: false)(8) * whereEdge(contains: true)(2)
+        let sameClass = connectSameTendencies * GraphScheme<Pitch.Class> { edge in
             edge.a == edge.b }
             .pullback(getPitchClass)
         let connectedToEight = connectToEight * whereEdge(contains: true)(8)
@@ -120,10 +120,6 @@ extension PitchSpeller {
 
     // MARK: - Type Properties
 
-    static let connectSameTendencies: GraphScheme<PitchSpellingNode.Index>
-        = GraphScheme<Tendency> { edge in edge.a == edge.b }.pullback { node in node.tendency
-    }
-
     static func adjacencyScheme (contains: Bool) -> (Pitch.Class) -> GraphScheme<Pitch.Class> {
         func pitchClassAdjacencyScheme (pitchClass: Pitch.Class) -> GraphScheme<Pitch.Class> {
             return GraphScheme<Pitch.Class> { edge in
@@ -206,6 +202,9 @@ extension PitchSpeller {
     }
 }
 
+let connectSameTendencies: GraphScheme<PitchSpellingNode.Index> = GraphScheme<Tendency> { edge in edge.a == edge.b
+}.pullback { node in node.tendency }
+
 // For each `Pitch.Class` `n`, denotes which of `(n, .up)` and `(n, .down)` should
 // be connected to `(8, .up)` in the spelling dependency model.
 private let eightTendencyLink: [(Pitch.Class, Tendency)] = [
-- 
2.17.2 (Apple Git-113)

