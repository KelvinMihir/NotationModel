From 8402c5d7364eb99a7c36ca4c4f10b0fe3b5ba1e4 Mon Sep 17 00:00:00 2001
From: James <jbean46@gmail.com>
Date: Mon, 5 Nov 2018 22:06:46 -0500
Subject: [PATCH 53/66] Make free func private

---
 .../SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift   | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift b/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
index ead9b47..e2948a3 100644
--- a/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
+++ b/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
@@ -99,7 +99,7 @@ extension PitchSpeller {
         }
         self.getPitchClass = getPitchClass
 
-        let specificToEight = GraphScheme<Cross<Pitch.Class, Tendency>>(eightLookup.contains)
+        let specificToEight = GraphScheme<Cross<Pitch.Class, Tendency>> (eightLookup.contains)
         let connectToEight: GraphScheme<PitchSpellingNode.Index> = specificToEight.pullback { flowNode in
             .init(getPitchClass(flowNode), flowNode.tendency)
         }
@@ -195,7 +195,7 @@ private func adjacencyScheme (contains: Bool) -> (Pitch.Class) -> GraphScheme<Pi
     return contains ? pitchClassAdjacencyScheme : pitchClassNonAdjacencyScheme
 }
 
-let connectSameTendencies: GraphScheme<PitchSpellingNode.Index> =
+private let connectSameTendencies: GraphScheme<PitchSpellingNode.Index> =
     GraphScheme<Tendency> { edge in edge.a == edge.b }.pullback { node in node.tendency }
 
 // For each `Pitch.Class` `n`, denotes which of `(n, .up)` and `(n, .down)` should
-- 
2.17.2 (Apple Git-113)

