From 272c80774a08610fef0783ec0529b01231e175f5 Mon Sep 17 00:00:00 2001
From: bwetherfield <bwetherfield@gmail.com>
Date: Sat, 3 Nov 2018 21:05:00 -0400
Subject: [PATCH 33/66] Switch out WeightCarrying for AdjacencyCarrying...
 (#153)

---
 .../PitchSpeller/Wetherfield/FlowNetwork.swift        |  8 ++++++++
 .../PitchSpeller/Wetherfield/Wetherfield.swift        | 11 ++++++-----
 2 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/Sources/SpelledPitch/PitchSpeller/Wetherfield/FlowNetwork.swift b/Sources/SpelledPitch/PitchSpeller/Wetherfield/FlowNetwork.swift
index 66ff95f..faf9a3a 100644
--- a/Sources/SpelledPitch/PitchSpeller/Wetherfield/FlowNetwork.swift
+++ b/Sources/SpelledPitch/PitchSpeller/Wetherfield/FlowNetwork.swift
@@ -51,6 +51,14 @@ extension FlowNetwork {
             }
         }
     }
+    
+    mutating func mask <G: GraphProtocol> (_ adjacencyCarrying: AdjacencyCarrying<G>)
+        where Node == G.Node
+    {
+        for edge in edges {
+            if !adjacencyCarrying.contains(from: edge.a, to: edge.b) { remove(edge) }
+        }
+    }
 }
 
 extension FlowNetwork {
diff --git a/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift b/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
index 211e5b2..6df5600 100644
--- a/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
+++ b/Sources/SpelledPitch/PitchSpeller/Wetherfield/Wetherfield.swift
@@ -16,19 +16,20 @@ protocol PitchSpellingNode: Hashable {
 struct PitchSpeller {
 
     // FIXME: Flesh out for all tendencies
-    static let tendencyGraph: WeightedGraph<Tendency,Double> = WeightedGraph(
+    static let tendencyGraph: Graph<Tendency> = Graph(
         [
             .up,
             .down
         ],
         [
-            UnorderedPair(.up,.up): 1,
-            UnorderedPair(.down, .down): 1
+            UnorderedPair(.up,.up),
+            UnorderedPair(.down,.down)
         ]
     )
 
-    static let weightCarrying = WeightCarrying.build(from: PitchSpeller.tendencyGraph)
-    static let tendencyMask: WeightCarrying<WeightedGraph<Cross<Int,Tendency>,Double>> = weightCarrying.pullback { $0.b }
+    static let adjacencyCarrying = AdjacencyCarrying.build(from: PitchSpeller.tendencyGraph)
+    static let tendencyMask: AdjacencyCarrying<Graph<Cross<Int,Tendency>>>
+        = adjacencyCarrying.pullback { $0.b }
 
     struct UnassignedNode: PitchSpellingNode {
         let index: Index
-- 
2.17.2 (Apple Git-113)

